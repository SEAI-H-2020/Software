{
  "swagger": "2.0",
  "info": {
    "version": "0.1.0",
    "title": "Smart Sensor Box API",
    "description": "Documentation automatically generated by the <b>swagger.autogen</b> module.\n                    <p> SEAI H - The Software Team </p>\n                    <p><b>WARNING:</b> In development, some of these APIs do not have failchecks yet<p>"
  },
  "host": "localhost:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "Measurements",
      "description": "Endpoints to upload or read measurement data"
    },
    {
      "name": "User Settings",
      "description": "Modify and view user settings such as sync and sample time"
    },
    {
      "name": "Authentication",
      "description": "Endpoints to authenticate users and view user data"
    },
    {
      "name": "Export",
      "description": "Export sensor measurements into different formats"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {},
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/measurements": {
      "post": {
        "tags": [
          "Measurements"
        ],
        "description": "Endpoint to upload sensor data.",
        "parameters": [
          {
            "name": "sensorData",
            "in": "body",
            "description": "Measurement from sensor box",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/NewMeasurement"
            }
          }
        ],
        "responses": {}
      },
      "get": {
        "tags": [
          "Measurements"
        ],
        "description": "Gets most recent measurement",
        "parameters": [],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Measurements"
        ],
        "description": "Deletes all measurements!! \n WARNING: Use with caution",
        "parameters": [],
        "responses": {}
      }
    },
    "/csv": {
      "get": {
        "tags": [
          "Export"
        ],
        "description": "Exports all sensor measurements in csv format",
        "parameters": [],
        "responses": {}
      }
    },
    "/usersettings/{box_id}": {
      "get": {
        "tags": [
          "User Settings"
        ],
        "description": "Gets user settings by box id",
        "parameters": [
          {
            "name": "box_id",
            "in": "path",
            "required": true,
            "description": "Unique box serial number",
            "type": "integer"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "User Settings"
        ],
        "description": "Updates user settings by box id",
        "parameters": [
          {
            "name": "box_id",
            "in": "path",
            "required": true,
            "description": "Unique box serial number",
            "type": "integer"
          },
          {
            "name": "userSettings",
            "in": "body",
            "description": "Measurement from sensor box",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/NewMeasurement"
            }
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "User Settings"
        ],
        "description": "Insert new user settings by box id \n To update existing user use the put request",
        "parameters": [
          {
            "name": "box_id",
            "in": "path",
            "required": true,
            "description": "Unique box serial number",
            "type": "integer"
          },
          {
            "name": "userSettings",
            "in": "body",
            "description": "Measurement from sensor box",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/NewUserSetting"
            }
          }
        ],
        "responses": {}
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Lists all users and their data.",
        "parameters": [],
        "responses": {}
      }
    },
    "/users/{username}/{password}": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Returns whether the pair username+password is correct/incorrect.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/insertuser/{username}/{password}/{email}": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Inserts a new user and returns if the process was sucesseful or not",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    }
  },
  "definitions": {
    "NewMeasurement": {
      "type": "object",
      "properties": {
        "temperature": {
          "type": "number",
          "example": 15
        },
        "humidity": {
          "type": "number",
          "example": 80
        },
        "wind": {
          "type": "number",
          "example": 2400
        },
        "noise_level": {
          "type": "number",
          "example": 65
        },
        "voltage": {
          "type": "number",
          "example": 3.3
        }
      },
      "required": [
        "temperature",
        "humidity",
        "wind",
        "noise_level",
        "voltage"
      ],
      "xml": {
        "name": "NewMeasurement"
      }
    },
    "NewUserSetting": {
      "type": "object",
      "properties": {
        "sync_period": {
          "type": "number",
          "example": 10
        },
        "sample_time": {
          "type": "number",
          "example": 5
        },
        "shutdown_on_wakeup": {
          "type": "boolean",
          "example": true
        },
        "username": {
          "type": "string",
          "example": "banana"
        }
      },
      "required": [
        "sync_period",
        "sample_time",
        "shutdown_on_wakeup",
        "username"
      ],
      "xml": {
        "name": "NewUserSetting"
      }
    }
  }
}